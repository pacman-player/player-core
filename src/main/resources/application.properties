## Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/player_core
spring.datasource.sql-script-encoding=UTF-8
spring.datasource.platform=postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=create
spring.jpa.database=POSTGRESQL
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
spring.mvc.static-path-pattern=/resources/**
spring.http.multipart.max-request-size=-1
spring.http.multipart.max-file-size=-1
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
# Батчинг (пакетная обработка).
# Пакетная обработка позволяет нам отправлять группу операторов SQL в
# базу данных за один вызов. Таким образом, мы можем оптимизировать
# использование сети и памяти нашего приложения. Без батчинга Hibernate
# сохраняет сущности по одной.
# !!! Если наши объекты используют генератор идентификаторов
# GenerationType.IDENTITY, Hibernate автоматически отключит
# пакетные сохранения / обновления. Поэтому у сущностей должен
# быть @GeneratedValue(strategy = GenerationType.SEQUENCE) !!!
# Укажем Hibernate, чтобы накапливал в persistence context, например,
# 5 сущностей и сохранял их одним пакетом в ходе одного обращения к БД:
spring.jpa.properties.hibernate.jdbc.batch_size=5
# Пакетное сохранение для нескольких разных сущностей:
spring.jpa.properties.hibernate.order_inserts=true
# Активация батчинга для внесения изменений в сущности:
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
## Google data auth
googleRedirectUri=http://localhost:8080/google
googleClientId=302577676814-07bvhpq9k8r5qngg223csrf81d17qu9j.apps.googleusercontent.com
googleResponseType=code
googleScope=https://www.googleapis.com/auth/userinfo.email
googleClientSecret=VADOrvY9rXwm5N-1Y1zdU-rq
googleCaptchaURL=https://www.google.com/recaptcha/api/siteverify?secret=%s&response=%s
## VK data auth
vkAppId=7258265
vkClientSecret=wBcwr1pv6e5I6xWCCiAS
vkRedirectUri=http://localhost:8080/vkontakte
## Path to downloaded songs
#songs_dir=/resources/songs
#uploaded_files_path=D:/songs/
#downloadSongsPath=src/main/resources/songs
#songs_dir=/music/
#uploaded_files_path=music/
#downloadSongsPath=src/main/music/
##music path
music.path=music/
music.initPath=music1/
##startup Music Search Services setting:
music.searchService.two=zaycevSaitServiceImpl
music.searchService.one=muzofondfmMusicSearchImpl
music.searchService.three=krolikSaitServiceImpl
music.searchService.four=downloadMusicVkRuServiceImpl
## Compilation's covers (pics)
uploaded.compilations.covers=covers
## Logger properties
#change profile below to DEBUG, DEV or PROD to change logging settings. See more in logback-spring.xml
spring.profiles.active=DEV
#Old logging config:
#logging.level.root=info
#logging.file=player.log
#logging.pattern.console=%d{HH:mm:ss} %highlight(%-5level) %magenta([%logger{30}.%M]) - %msg%n
#logging.pattern.file=%d{YY/MM/DD HH:mm:ss} %-5level %logger{40}.%M - %msg%n
## GMail properties
spring.mail.host=smtp.gmail.com
spring.mail.username=pacmancore26@gmail.com
spring.mail.password=G7682121g
spring.mail.port=587 
#spring.mail.port=465
spring.mail.properties.mail.smtp.starttls.enable=true
#Gooogle reCAPTCHA
recaptcha.secret=6Lc95M0UAAAAACm23zCKG_6D11kPFYp3tyC1wfPL
##For VK bot
group_id=190607919
access_token=fbd315fab111cb41c1bc6306960d85abb16adbc2b5af3b550e2f95ba7e234edb0058c9ddb9b69f8335ae2
#map accuracy
accuracy=0.005
## MySQL
#spring.datasource.url = jdbc:mysql://localhost:3306/player_core?useLegacyDatetimeCode=false&serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.sql-script-encoding=UTF-8
#spring.datasource.username = root
#spring.datasource.password = root
#spring.jpa.database-platform = spring.app.dao.Dialect
#spring.jpa.show-sql = false
#spring.jpa.database=default
#spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
#spring.jpa.properties.hibernate.connection.CharSet=utf-8
#spring.jpa.properties.hibernate.connection.useUnicode=true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.mvc.static-path-pattern=/resources/**
#spring.resources.chain.strategy.content.enabled=true
#spring.resources.chain.strategy.content.paths=/**
#spring.http.multipart.max-file-size=-1
#spring.http.multipart.max-request-size=-1
#server.tomcat.uri-encoding=UTF-8
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true